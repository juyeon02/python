
# ========================================
# Python 주석(Comment) 기본 사용법
# ========================================

# 1. 한 줄 주석: # 기호를 사용
# 이것은 주석입니다.
# 컴퓨터는 이 줄을 무시하고 실행하지 않습니다.
# 주석은 코드를 설명하거나 메모를 남길 때 사용합니다.

# 2. 여러 줄 주석: 작은따옴표 3개 (''') 사용
''' 
이것도 주석입니다.
여러 줄에 걸쳐 긴 설명을 작성할 수 있습니다.
함수나 클래스의 상세한 설명을 작성할 때 주로 사용됩니다.
'''

# 3. 여러 줄 주석: 큰따옴표 3개 (""") 사용
"""
이것도 여러 줄 주석입니다.
주석을 사용하는 이유:
1. 코드가 무엇을 하는지 설명
2. 나중에 봐도 이해할 수 있도록 기록
3. 다른 사람과 협업할 때 소통을 위해
4. 복잡한 로직을 쉽게 이해할 수 있도록 설명
"""

# ========================================
# 변수(Variable) 선언과 사용법
# ========================================

# 좋은 변수명 예시 - 의미를 명확하게 알 수 있음
age = 20                    # 나이를 저장하는 정수형 변수
student_name = "김철수"      # 학생 이름을 저장하는 문자열 변수
is_student = True           # 학생 여부를 저장하는 불린(참/거짓) 변수
total_score = 95.5          # 총점을 저장하는 실수형 변수
subject_count = 5           # 과목 수를 저장하는 정수형 변수

print(f"{student_name}님의 나이: {age}세")              # f-string을 사용한 출력
print(f"학생 여부: {is_student}")                      # 불린 값 출력
print(f"총점: {total_score}점, 과목 수: {subject_count}개")

# ========================================
# 나쁜 변수명 예시 - 의미를 알 수 없음
# ========================================

# 아래는 좋지 않은 변수명의 예시입니다
a = 24              # 'a'가 무엇을 의미하는지 알 수 없음
na = "김철수"       # 'na'가 이름인지 다른 것인지 불분명
x = True           # 'x'가 무엇을 나타내는지 모호함

# 위의 나쁜 변수명을 좋은 변수명으로 바꾼다면:
# a = 24         → student_age = 24
# na = "김철수"   → student_name = "김철수"
# x = True       → is_enrolled = True

# ========================================
# Python 변수명 규칙과 관례
# ========================================

'''
변수명 작성 규칙 (반드시 지켜야 함):
1. 영문자(a-z, A-Z), 숫자(0-9), 언더스코어(_)만 사용 가능
2. 숫자로 시작할 수 없음 (1name ❌, name1 ⭕)
3. 공백(스페이스) 사용 불가 (my name ❌, my_name ⭕)
4. Python 예약어는 사용 불가 (if, for, while, class 등)
5. 대소문자를 구분함 (Name과 name은 다른 변수)

변수명 작성 관례 (권장사항):
1. 의미 있고 명확한 이름 사용
2. snake_case 방식 사용 (단어 사이를 언더스코어로 연결)
3. 상수는 대문자로 작성 (PI = 3.14159)
4. 클래스명은 PascalCase 사용 (MyClass)
'''

# 올바른 변수명 예시
user_name = "홍길동"         # snake_case 사용
user_age = 25              # 의미가 명확함
MAX_RETRY_COUNT = 3        # 상수는 대문자로
is_valid_email = True      # 불린 변수는 is_, has_ 등으로 시작

# 잘못된 변수명 예시 (주석 처리하여 실행 방지)
# 1number = 10             # 숫자로 시작 불가능 ❌
# my-name = "김철수"        # 하이픈(-) 사용 불가능 ❌
# my name = "김철수"        # 공백 사용 불가능 ❌
# class = "A"              # Python 예약어 사용 불가능 ❌

# ========================================
# 추가 팁: 주석 작성 요령
# ========================================

"""
좋은 주석 작성법:
1. '무엇을'이 아닌 '왜'를 설명하기
2. 복잡한 로직은 단계별로 설명
3. TODO, FIXME, HACK 같은 태그 활용
4. 정기적으로 주석 업데이트하기

나쁜 주석 예시:
age = age + 1  # age에 1을 더함 (코드를 그대로 설명)

좋은 주석 예시:
age = age + 1  # 생일이 지났으므로 나이를 1살 증가
"""

# TODO: 나중에 입력값 유효성 검사 기능 추가 필요
# FIXME: 이 부분에서 가끔 오류 발생, 수정 필요
# HACK: 임시 해결책, 나중에 더 나은 방법으로 개선
