# ==========================================
#           🔄 while문 완전정복 🔄
# ==========================================

# 📌 while문이란?
# - "~하는 동안" 계속 반복하는 반복문
# - 조건이 참(True)인 동안 코드를 계속 실행
# - 조건이 거짓(False)이 되면 반복 종료

# 📌 for문 vs while문 차이점
# - for문: "5번 반복해줘" 처럼 횟수가 정해진 경우
# - while문: "비가 올 때까지 기다려" 처럼 조건으로 반복

# ==========================================
#      예제 1: 카운트다운 (5, 4, 3, 2, 1)
# ==========================================
print("=== 카운트다운 시작 ===")
count = 5  # 5부터 시작할거야

while count > 0:  # count가 0보다 크면 계속 반복해
    print(f'count {count}')
    count = count - 1  # 매번 1씩 빼기 (5→4→3→2→1→0)
    # ⚠️ 이 줄이 없으면? 5에서 영원히 멈춰있음 (무한반복)

print('while문 종료')  # count가 0이 되면 여기로 와

# ==========================================
#      예제 2: 1부터 100까지 다 더하기
# ==========================================
print("\n=== 1부터 100까지 합계 ===")
total = 0  # 더한 값을 저장할 통 (처음엔 비어있음)
num = 1    # 1부터 시작

while num <= 100:  # num이 100 이하면 계속해
    total = total + num  # 지금까지 합계에 현재 숫자 더하기
    num = num + 1        # 다음 숫자로 (1→2→3→...→100→101)

print(f'1부터 100까지의 합 {total}')  # 5050이 나와야 정답!

# ==========================================
#      예제 3: 올바른 나이 입력받기
# ==========================================
print("\n=== 나이 입력 받기 ===")
# 사람 나이는 0~150살 사이여야 해
age = -1  # 일부러 잘못된 값 넣기 (반복문 들어가려고)

while age < 0 or age > 150:  # 나이가 이상하면 다시 물어봐
    age = int(input('나이를 입력하세요(0-150): '))

    if age < 0 or age > 150:  # 또 이상한 값 입력했네?
        print('😅 그런 나이는 없어요! 다시 입력해주세요!')

print(f'✅ 입력된 나이: {age}세')

# ==========================================
#      예제 4: 비밀번호 3번 기회
# ==========================================
print("\n=== 비밀번호 입력 (3번 기회) ===")
correct_password = 'python123'  # 정답 비밀번호
attempt = 0                      # 지금까지 몇 번 시도했나
max_attempts = 3                 # 총 3번만 기회 줄거야

while attempt < max_attempts:  # 아직 3번 안됐으면 계속
    password = input('🔐 비밀번호를 입력하세요: ')
    attempt = attempt + 1  # 시도 횟수 1 증가

    if password == correct_password:  # 맞췄다!
        print('✅ 로그인 성공!')
        break  # 여기서 반복문 탈출! (더 이상 물어보지 마)
    else:  # 틀렸네...
        remaining = max_attempts - attempt  # 몇 번 남았나 계산
        if remaining > 0:  # 아직 기회가 있으면
            print(f'❌ 틀렸습니다. {remaining}번 남았습니다.')
        else:  # 기회 다 썼으면
            print(f'🚫 로그인 실패! 계정이 잠겼습니다.')

# ==========================================
#      예제 5: 무한 반복 (q 누르면 종료)
# ==========================================
print("\n=== 무한 반복 예제 ===")
while True:  # True는 항상 참 = 영원히 반복
    user_input = input('명령을 입력하세요(종료는 q): ')

    if user_input == 'q':  # q를 입력하면
        print('👋 프로그램을 종료합니다.')
        break  # 탈출! (무한 반복 끝)

    print(f'입력한 명령: {user_input}')
    # 여기서 실제 명령 처리하면 됨

# ==========================================
#      예제 6: 간단한 계산기
# ==========================================
print("\n=== 계산기 (첫 번째 숫자 0 입력시 종료) ===")
while True:  # 계속 계산할 수 있게 무한 반복
    num1 = float(input("첫 번째 숫자: "))

    if num1 == 0:  # 0 입력하면 계산기 끄기
        print("계산기를 종료합니다.")
        break

    num2 = float(input("두 번째 숫자: "))
    operator = input('연산자 (+, -, *, /): ')

    # 어떤 계산을 할지 정하기
    if operator == '+':  # 더하기
        result = num1 + num2
    elif operator == '-':  # 빼기
        result = num1 - num2
    elif operator == '*':  # 곱하기
        result = num1 * num2
    elif operator == '/':  # 나누기
        if num2 != 0:  # 0으로는 못 나눠!
            result = num1 / num2
        else:
            print('⚠️ 0으로 나눌 수 없어요!')
            continue  # 이번 계산은 건너뛰고 다시 처음부터
    else:  # +, -, *, / 가 아닌 다른 걸 입력했네?
        print('❌ 잘못된 연산자입니다.')
        continue  # 이번 계산은 건너뛰고 다시 처음부터

    print(f'📊 결과: {result}')

# ==========================================
#      예제 7: while-else (특별한 기능)
# ==========================================
print("\n=== while-else 예제 ===")
# while-else는 break 없이 정상 종료됐는지 확인할 때 써

i = 10
while i < 15:  # i가 15보다 작으면 반복
    print(i)
    if i == 11:  # i가 11이 되면
        break    # 강제 종료! (else 실행 안됨)
    i = i + 1
else:  # break 없이 조건이 False가 되어 종료되면 실행
    print('정상적으로 끝났어요!')
    # 위 예제는 i=11에서 break 되므로 이 줄은 출력 안됨

# ==========================================
#      🎮 보너스: 재미있는 추가 예제들
# ==========================================

print("\n" + "="*40)
print("        🎮 추가 예제들")
print("="*40)

# 추가 1: 구구단 출력기
print("\n📚 구구단 출력기")
dan = int(input("몇 단을 출력할까요? (2~9): "))
i = 1
while i <= 9:
    print(f"{dan} x {i} = {dan * i}")
    i = i + 1

# 추가 2: 별 찍기
print("\n⭐ 별 찍기")
stars = 1
while stars <= 5:
    print("*" * stars)  # 별을 stars개만큼 출력
    stars = stars + 1
# 결과:
# *
# **
# ***
# ****
# *****

# 추가 3: 짝수만 출력
print("\n🔢 1~10 중 짝수만")
num = 1
while num <= 10:
    if num % 2 == 0:  # 2로 나눈 나머지가 0이면 짝수
        print(num, end=" ")
    num = num + 1
print()  # 줄바꿈

# ==========================================
#           💡 while문 핵심 정리
# ==========================================
print("\n" + "="*40)
print("💡 while문 꼭 기억할 것!")
print("="*40)
print("1. 조건이 True인 동안 계속 반복")
print("2. 조건을 변경하는 코드 꼭 넣기 (안 그러면 무한반복)")
print("3. break: 반복문 즉시 탈출")
print("4. continue: 이번 반복만 건너뛰기")
print("5. while True: 무한반복 (break로 탈출)")
print("="*40)

print()
print('======== 이중 for문 ========')
# 이중 for문 - 구구단
for i in range(2, 10):
    print(f'=== {i}단 ===')
    for j in range(1, 10):
        print(f'{i} x {j} = {i * j}')
    print()
print()


print('======== 이중 while문 ========')

i = 2  # 초기값

while i < 10:
    j = 1
    print(f'=== {i}단 ===')
    while j < 10:
        print(f'{i} x {j} = {i * j}')
        j += 1  # 수 증가
    print()
    i += 1  # 단 증가
